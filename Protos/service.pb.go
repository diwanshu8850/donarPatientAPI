// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: Protos/service.proto

package Protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShowUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	PhoneNo string `protobuf:"bytes,3,opt,name=PhoneNo,proto3" json:"PhoneNo,omitempty"`
	EmailId string `protobuf:"bytes,4,opt,name=EmailId,proto3" json:"EmailId,omitempty"`
	Address string `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty"`
}

func (x *ShowUser) Reset() {
	*x = ShowUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Protos_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowUser) ProtoMessage() {}

func (x *ShowUser) ProtoReflect() protoreflect.Message {
	mi := &file_Protos_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowUser.ProtoReflect.Descriptor instead.
func (*ShowUser) Descriptor() ([]byte, []int) {
	return file_Protos_service_proto_rawDescGZIP(), []int{0}
}

func (x *ShowUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShowUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShowUser) GetPhoneNo() string {
	if x != nil {
		return x.PhoneNo
	}
	return ""
}

func (x *ShowUser) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

func (x *ShowUser) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YourId     string `protobuf:"bytes,1,opt,name=YourId,proto3" json:"YourId,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	SecretCode string `protobuf:"bytes,3,opt,name=SecretCode,proto3" json:"SecretCode,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Protos_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_Protos_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_Protos_service_proto_rawDescGZIP(), []int{1}
}

func (x *Request) GetYourId() string {
	if x != nil {
		return x.YourId
	}
	return ""
}

func (x *Request) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Request) GetSecretCode() string {
	if x != nil {
		return x.SecretCode
	}
	return ""
}

type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string               `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	SecretCode         string               `protobuf:"bytes,2,opt,name=SecretCode,proto3" json:"SecretCode,omitempty"`
	Name               string               `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Address            string               `protobuf:"bytes,4,opt,name=Address,proto3" json:"Address,omitempty"`
	PhoneNo            string               `protobuf:"bytes,5,opt,name=PhoneNo,proto3" json:"PhoneNo,omitempty"`
	EmailId            string               `protobuf:"bytes,6,opt,name=EmailId,proto3" json:"EmailId,omitempty"`
	UserType           string               `protobuf:"bytes,7,opt,name=UserType,proto3" json:"UserType,omitempty"`
	DiseaseDescription string               `protobuf:"bytes,8,opt,name=DiseaseDescription,proto3" json:"DiseaseDescription,omitempty"`
	RequestedUsers     map[string]int32     `protobuf:"bytes,9,rep,name=RequestedUsers,proto3" json:"RequestedUsers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	PendingRequests    map[string]int32     `protobuf:"bytes,10,rep,name=PendingRequests,proto3" json:"PendingRequests,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ConnectedUsers     map[string]*ShowUser `protobuf:"bytes,11,rep,name=ConnectedUsers,proto3" json:"ConnectedUsers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Protos_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_Protos_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_Protos_service_proto_rawDescGZIP(), []int{2}
}

func (x *Record) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Record) GetSecretCode() string {
	if x != nil {
		return x.SecretCode
	}
	return ""
}

func (x *Record) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Record) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Record) GetPhoneNo() string {
	if x != nil {
		return x.PhoneNo
	}
	return ""
}

func (x *Record) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

func (x *Record) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *Record) GetDiseaseDescription() string {
	if x != nil {
		return x.DiseaseDescription
	}
	return ""
}

func (x *Record) GetRequestedUsers() map[string]int32 {
	if x != nil {
		return x.RequestedUsers
	}
	return nil
}

func (x *Record) GetPendingRequests() map[string]int32 {
	if x != nil {
		return x.PendingRequests
	}
	return nil
}

func (x *Record) GetConnectedUsers() map[string]*ShowUser {
	if x != nil {
		return x.ConnectedUsers
	}
	return nil
}

type Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *Success) Reset() {
	*x = Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Protos_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_Protos_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_Protos_service_proto_rawDescGZIP(), []int{3}
}

func (x *Success) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RepShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User []*ShowUser `protobuf:"bytes,1,rep,name=User,proto3" json:"User,omitempty"`
}

func (x *RepShow) Reset() {
	*x = RepShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Protos_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepShow) ProtoMessage() {}

func (x *RepShow) ProtoReflect() protoreflect.Message {
	mi := &file_Protos_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepShow.ProtoReflect.Descriptor instead.
func (*RepShow) Descriptor() ([]byte, []int) {
	return file_Protos_service_proto_rawDescGZIP(), []int{4}
}

func (x *RepShow) GetUser() []*ShowUser {
	if x != nil {
		return x.User
	}
	return nil
}

var File_Protos_service_proto protoreflect.FileDescriptor

var file_Protos_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x7c,
	0x0a, 0x08, 0x53, 0x68, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x59, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x59, 0x6f, 0x75, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x59, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xa9, 0x05, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x44, 0x69,
	0x73, 0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x4a, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x4d, 0x0a, 0x0f,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x4a, 0x0a, 0x0e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x41, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a, 0x14, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x53,
	0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x53, 0x68, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x1d, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x24, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x32, 0x8c, 0x04, 0x0a, 0x13, 0x44, 0x6f, 0x6e, 0x61, 0x72, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x09, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x53, 0x68, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x72, 0x73, 0x12, 0x0e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x52, 0x65, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x0f, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x00, 0x12, 0x31, 0x0a,
	0x0b, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x00,
	0x12, 0x33, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x10, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x2f, 0x68, 0x6f, 0x6d, 0x65, 0x2f, 0x64, 0x69, 0x77, 0x61,
	0x6e, 0x73, 0x68, 0x75, 0x2f, 0x67, 0x6f, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x64, 0x6f, 0x6e, 0x61, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_Protos_service_proto_rawDescOnce sync.Once
	file_Protos_service_proto_rawDescData = file_Protos_service_proto_rawDesc
)

func file_Protos_service_proto_rawDescGZIP() []byte {
	file_Protos_service_proto_rawDescOnce.Do(func() {
		file_Protos_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_Protos_service_proto_rawDescData)
	})
	return file_Protos_service_proto_rawDescData
}

var file_Protos_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_Protos_service_proto_goTypes = []interface{}{
	(*ShowUser)(nil), // 0: Protos.ShowUser
	(*Request)(nil),  // 1: Protos.Request
	(*Record)(nil),   // 2: Protos.Record
	(*Success)(nil),  // 3: Protos.Success
	(*RepShow)(nil),  // 4: Protos.RepShow
	nil,              // 5: Protos.Record.RequestedUsersEntry
	nil,              // 6: Protos.Record.PendingRequestsEntry
	nil,              // 7: Protos.Record.ConnectedUsersEntry
}
var file_Protos_service_proto_depIdxs = []int32{
	5,  // 0: Protos.Record.RequestedUsers:type_name -> Protos.Record.RequestedUsersEntry
	6,  // 1: Protos.Record.PendingRequests:type_name -> Protos.Record.PendingRequestsEntry
	7,  // 2: Protos.Record.ConnectedUsers:type_name -> Protos.Record.ConnectedUsersEntry
	0,  // 3: Protos.RepShow.User:type_name -> Protos.ShowUser
	0,  // 4: Protos.Record.ConnectedUsersEntry.value:type_name -> Protos.ShowUser
	2,  // 5: Protos.DonarPatientService.CreateUser:input_type -> Protos.Record
	2,  // 6: Protos.DonarPatientService.LoginUser:input_type -> Protos.Record
	2,  // 7: Protos.DonarPatientService.DeleteUser:input_type -> Protos.Record
	1,  // 8: Protos.DonarPatientService.GetUser:input_type -> Protos.Request
	2,  // 9: Protos.DonarPatientService.GetDonars:input_type -> Protos.Record
	2,  // 10: Protos.DonarPatientService.GetPatients:input_type -> Protos.Record
	1,  // 11: Protos.DonarPatientService.SendRequest:input_type -> Protos.Request
	1,  // 12: Protos.DonarPatientService.CancelRequest:input_type -> Protos.Request
	1,  // 13: Protos.DonarPatientService.AcceptRequest:input_type -> Protos.Request
	1,  // 14: Protos.DonarPatientService.CancelConnection:input_type -> Protos.Request
	2,  // 15: Protos.DonarPatientService.CreateUser:output_type -> Protos.Record
	2,  // 16: Protos.DonarPatientService.LoginUser:output_type -> Protos.Record
	3,  // 17: Protos.DonarPatientService.DeleteUser:output_type -> Protos.Success
	0,  // 18: Protos.DonarPatientService.GetUser:output_type -> Protos.ShowUser
	4,  // 19: Protos.DonarPatientService.GetDonars:output_type -> Protos.RepShow
	4,  // 20: Protos.DonarPatientService.GetPatients:output_type -> Protos.RepShow
	3,  // 21: Protos.DonarPatientService.SendRequest:output_type -> Protos.Success
	3,  // 22: Protos.DonarPatientService.CancelRequest:output_type -> Protos.Success
	3,  // 23: Protos.DonarPatientService.AcceptRequest:output_type -> Protos.Success
	3,  // 24: Protos.DonarPatientService.CancelConnection:output_type -> Protos.Success
	15, // [15:25] is the sub-list for method output_type
	5,  // [5:15] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_Protos_service_proto_init() }
func file_Protos_service_proto_init() {
	if File_Protos_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Protos_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Protos_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Protos_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Protos_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Protos_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Protos_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Protos_service_proto_goTypes,
		DependencyIndexes: file_Protos_service_proto_depIdxs,
		MessageInfos:      file_Protos_service_proto_msgTypes,
	}.Build()
	File_Protos_service_proto = out.File
	file_Protos_service_proto_rawDesc = nil
	file_Protos_service_proto_goTypes = nil
	file_Protos_service_proto_depIdxs = nil
}
